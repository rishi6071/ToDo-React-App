{"version":3,"sources":["Item.jsx","Todo.jsx","App.js","index.js"],"names":["Item","props","text","className","onClick","onSelect","id","aria-hidden","Todo","useState","task","setTask","todoItems","setTodoItems","deleteItem","existingItems","filter","item","index","title","onSubmit","event","preventDefault","preTask","type","onChange","target","value","name","placeholder","required","map","currentTask","key","App","ReactDOM","render","document","getElementById"],"mappings":"+RAmBeA,G,MAjBF,SAACC,GAEV,OACI,oCACI,4BAAKA,EAAMC,KACP,uBACIC,UAAU,cACVC,QAAS,WACLH,EAAMI,SAASJ,EAAMK,KAEzBC,cAAY,aC6CjBC,EArDF,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACRC,EADQ,KACFC,EADE,OAEmBF,mBAAS,IAF5B,mBAERG,EAFQ,KAEGC,EAFH,KAgBTC,EAAa,SAACR,GAChBO,GAAc,SAACE,GACX,OAAOA,EAAcC,QAAQ,SAACC,EAAMC,GAEhC,OAAOA,IAAUZ,SAS7B,OACI,oCACI,yCAAc,uBAAGH,UAAU,aAAagB,MAAM,aAAaf,QANjD,WACdS,EAAa,KAKsEN,cAAY,UAE3F,0BAAMa,SAzBE,SAACC,GACbA,EAAMC,iBACNT,GAAc,SAACU,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAoBb,OAExBC,EAAQ,KAoBqBR,UAAU,aAC/B,2BAAOqB,KAAK,OAAOC,SA9Bb,SAACJ,GACfV,EAAQU,EAAMK,OAAOC,QA6B2BA,MAAOjB,EAAMkB,KAAK,YAAYC,YAAY,aAAaC,UAAQ,IACvG,4BAAQN,KAAK,UAAS,uBAAGrB,UAAU,aAAaI,cAAY,WAGhE,4BAEIK,EAAUmB,KAAK,SAACC,EAAa1B,GACzB,OAAO,kBAAC,EAAD,CAAM2B,IAAK3B,EAClBA,GAAIA,EACJJ,KAAM8B,EACN3B,SAAYS,UCjCjBoB,EAXH,WAEV,OACE,oCACE,yBAAK/B,UAAU,QACb,kBAAC,EAAD,S,MCJRgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9161b897.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Item = (props) => {\r\n\r\n    return(\r\n        <>\r\n            <li>{props.text} \r\n                <i \r\n                    className=\"fa fa-trash\" \r\n                    onClick={() => {\r\n                        props.onSelect(props.id);\r\n                    }} \r\n                    aria-hidden=\"true\">\r\n                </i>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Item;","import React, { useState } from 'react';\r\nimport './Todo.css';\r\nimport Item from './Item';\r\n\r\nconst Todo = () => {\r\n    const [task, setTask] = useState(\"\");\r\n    const [todoItems, setTodoItems] = useState([]);\r\n\r\n    const inputTask = (event) => {\r\n        setTask(event.target.value);\r\n    }\r\n    \r\n    const addTask = (event) => {\r\n        event.preventDefault();\r\n        setTodoItems( (preTask) => {\r\n            return [...preTask, task];\r\n        });\r\n        setTask(\"\");\r\n    }\r\n\r\n    const deleteItem = (id) => {\r\n        setTodoItems( (existingItems) => {\r\n            return existingItems.filter( (item, index) => {\r\n                // Not Showing the deleted Item\r\n                return index !== id;\r\n            });\r\n        });\r\n    }\r\n\r\n    const clearList = () => {\r\n        setTodoItems([]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1>ToDo List <i className=\"fa fa-bomb\" title=\"Clear List\" onClick={clearList} aria-hidden=\"true\"></i></h1>\r\n\r\n            <form onSubmit={addTask} className=\"taskfield\">\r\n                <input type=\"text\" onChange={inputTask} value={task} name=\"itemField\" placeholder=\"Add a Task\" required />\r\n                <button type=\"submit\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\r\n            </form>\r\n\r\n            <ol>\r\n            {   \r\n                todoItems.map( (currentTask, id) => {\r\n                    return <Item key={id} \r\n                    id={id} \r\n                    text={currentTask} \r\n                    onSelect = {deleteItem}\r\n                    />\r\n                })\r\n            }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport './App.css';\nimport Todo from './Todo';\n\nconst App = () => {\n\n  return (\n    <>\n      <div className=\"todo\">\n        <Todo />\n      </div>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}